### Install necessary tools for rom build on Ubuntu Bionic 18.04 ###
apt-get update
apt-get install -y git-core gnupg flex bison gperf libsdl1.2-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev pngcrush schedtool g++-multilib lib32z1-dev lib32ncurses5-dev libxml2-utils u-boot-tools libc6-dev x11proto-core-dev libgl1-mesa-dev tofrodos python-markdown xsltproc
apt-get install  libx11-dev libreadline6-dev libgl1-mesa-glx wget
apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip python bc
apt-get install software-properties-common
add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get install openjdk-8-jdk
### Install necessary tools for rom build on Ubuntu Trusty 14.04 ###
apt-get update
apt-get install -y git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev pngcrush schedtool g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline-gplv2-dev libxml2-utils u-boot-tools libc6-dev x11proto-core-dev libgl1-mesa-dev mingw32 tofrodos python-markdown xsltproc
apt-get install  libx11-dev libreadline6-dev libgl1-mesa-glx wget
apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip python bc
apt-get install software-properties-common
add-apt-repository ppa:openjdk-r/ppa 
sudo apt-get update 
sudo apt-get install openjdk-8-jdk
# Deprecated:
#git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9
### Common part, install gcc 4.9 for cross compilation ###
wget https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/93092903254cba0b6950c94170332973a85b450f.tar.gz
mkdir aarch64-linux-android-4.9
tar -xf ./93092903254cba0b6950c94170332973a85b450f.tar.gz -C ./aarch64-linux-android-4.9/ 
cd aarch64-linux-android-4.9/bin
mv aarch64-linux-android-c++ aarch64-linux-android-c++_
cp db96eedc-a815-11e9-a708-d79346614c9b aarch64-linux-android-c++
mv aarch64-linux-android-g++ aarch64-linux-android-g++_
cp db96eedc-a815-11e9-a708-d79346614c9b aarch64-linux-android-g++

mv aarch64-linux-android-gcc aarch64-linux-android-gcc_
cp 921d9846-a815-11e9-84ea-ff8bce1b90b6 aarch64-linux-android-gcc
mv aarch64-linux-android-gcc-4.9 aarch64-linux-android-gcc-4.9_
cp 921d9846-a815-11e9-84ea-ff8bce1b90b6 aarch64-linux-android-gcc-4.9
mv aarch64-linux-androidkernel-gcc aarch64-linux-androidkernel-gcc_
cp 921d9846-a815-11e9-84ea-ff8bce1b90b6 aarch64-linux-androidkernel-gcc

cd -
mv ./aarch64-linux-android-4.9/ /usr/local/bin/

### Clone sources edit and run build ###
#tar -xf kernel-3.18.tbz2
#cd kernel-3.18
git clone https://github.com/McPrapor/kernel_misu
cd kernel_misu
export ARCH=arm64
export SUBARCH=arm64
export CROSS_COMPILE=/usr/local/bin/aarch64-linux-android-4.9/bin/aarch64-linux-android-
make dep
make clean
make mrproper
mkdir out 
make O=out TARGET_ARCH=arm64 abyrvalg_defconfig
make -j$(nproc --all) O=out TARGET_ARCH=arm64 | tee -a out/build.log



### Use Image.gz-dtb as kernel image
###./arch/arm64/boot/Image.gz-dtb ==> boot.img-kernel



### Clean before next build ###
make mrproper
