#ifndef _KD_CAMERA_HW_H_
#define _KD_CAMERA_HW_H_

#include <linux/types.h>


#if defined CONFIG_MTK_LEGACY
#include <mach/mt_gpio.h>
#include <mach/mt_pm_ldo.h>
#include "pmic_drv.h"

#ifndef FALSE
  #define FALSE (0)
#endif

#ifndef TRUE
  #define TRUE  (1)
#endif

/*  */
/* Analog */
#define CAMERA_POWER_VCAM_A         PMIC_APP_MAIN_CAMERA_POWER_A
/* Digital */
#define CAMERA_POWER_VCAM_D         PMIC_APP_MAIN_CAMERA_POWER_D
/* AF */
#define CAMERA_POWER_VCAM_AF        PMIC_APP_MAIN_CAMERA_POWER_AF
/* digital io */
#define CAMERA_POWER_VCAM_IO        PMIC_APP_MAIN_CAMERA_POWER_IO
/* Digital for Sub */
#define SUB_CAMERA_POWER_VCAM_D     PMIC_APP_SUB_CAMERA_POWER_D

#ifndef CONFIG_V36BML_CAMERA
/* FIXME, should defined in DCT tool */
/* Main sensor */
#define CAMERA_CMRST_PIN            GPIO_CAMERA_CMRST_PIN
#define CAMERA_CMRST_PIN_M_GPIO     GPIO_CAMERA_CMRST_PIN_M_GPIO

#define CAMERA_CMPDN_PIN            GPIO_CAMERA_CMPDN_PIN
#define CAMERA_CMPDN_PIN_M_GPIO     GPIO_CAMERA_CMPDN_PIN_M_GPIO

/* FRONT sensor */
#define CAMERA_CMRST1_PIN           GPIO_CAMERA_CMRST1_PIN
#define CAMERA_CMRST1_PIN_M_GPIO    GPIO_CAMERA_CMRST1_PIN_M_GPIO

#define CAMERA_CMPDN1_PIN           GPIO_CAMERA_CMPDN1_PIN
#define CAMERA_CMPDN1_PIN_M_GPIO    GPIO_CAMERA_CMPDN1_PIN_M_GPIO

/* Define I2C Bus Num */
#define SUPPORT_I2C_BUS_NUM1        0
#define SUPPORT_I2C_BUS_NUM2        0
#else
#define CAMERA_CMRST_PIN            0
#define CAMERA_CMRST_PIN_M_GPIO     0

#define CAMERA_CMPDN_PIN            0
#define CAMERA_CMPDN_PIN_M_GPIO     0

/* FRONT sensor */
#define CAMERA_CMRST1_PIN           0
#define CAMERA_CMRST1_PIN_M_GPIO    0

#define CAMERA_CMPDN1_PIN           0
#define CAMERA_CMPDN1_PIN_M_GPIO    0
#endif
#define GPIO_OUT_ONE 1
#define GPIO_OUT_ZERO 0

#ifdef CONFIG_V36BML_CAMERA
#define SUPPORT_I2C_BUS_NUM1        0
#define SUPPORT_I2C_BUS_NUM2        0
#endif
#endif /* End of #if defined CONFIG_MTK_LEGACY */


#ifdef CONFIG_V36BML_CAMERA

//Main sensor
#define CAMERA_CMRST_PIN           GPIO_CAMERA_CMRST_PIN //GPIO46
#define CAMERA_CMRST_PIN_M_GPIO    GPIO_CAMERA_CMRST_PIN_M_GPIO

#define CAMERA_CMPDN_PIN            GPIO_CAMERA_CMPDN_PIN
#define CAMERA_CMPDN_PIN_M_GPIO     GPIO_CAMERA_CMPDN_PIN_M_GPIO

//FRONT sensor
#define CAMERA_CMRST1_PIN           GPIO_CAMERA_CMRST1_PIN //GPIO4
#define CAMERA_CMRST1_PIN_M_GPIO    GPIO_CAMERA_CMRST1_PIN_M_GPIO

#define CAMERA_CMPDN1_PIN           GPIO_CAMERA_CMPDN1_PIN
#define CAMERA_CMPDN1_PIN_M_GPIO    GPIO_CAMERA_CMPDN1_PIN_M_GPIO

// Define I2C Bus Num
#define SUPPORT_I2C_BUS_NUM1        0
#define SUPPORT_I2C_BUS_NUM2        0

typedef enum MT65XX_POWER_TAG {

    MT6328_POWER_LDO_VAUX18=0,
    MT6328_POWER_LDO_VTCXO_0,
    MT6328_POWER_LDO_VTCXO_1,
    MT6328_POWER_LDO_VAUD28,
    MT6328_POWER_LDO_VCN28,
    MT6328_POWER_LDO_VCAMA,
    MT6328_POWER_LDO_VCN33_BT,
    MT6328_POWER_LDO_VCN33_WIFI,
    MT6328_POWER_LDO_VUSB33,
    MT6328_POWER_LDO_VEFUSE,
    MT6328_POWER_LDO_VSIM1,
    MT6328_POWER_LDO_VSIM2,
    MT6328_POWER_LDO_VEMC33,
    MT6328_POWER_LDO_VMCH,
    MT6328_POWER_LDO_VTREF,
    MT6328_POWER_LDO_VMC,
    MT6328_POWER_LDO_VCAM_AF,
    MT6328_POWER_LDO_VIO28,
    MT6328_POWER_LDO_VGP1,
    MT6328_POWER_LDO_VIBR,
    MT6328_POWER_LDO_VCAMD,
    MT6328_POWER_LDO_VRF18_0,
    MT6328_POWER_LDO_VRF18_1,
    MT6328_POWER_LDO_VIO18,
    MT6328_POWER_LDO_VCN18,
    MT6328_POWER_LDO_VCAM_IO,
    MT6328_POWER_LDO_VSRAM,
    MT6328_POWER_LDO_VM,

    MT65XX_POWER_LDO_DEFAULT,
    MT65XX_POWER_COUNT_END,
    MT65XX_POWER_NONE = -1
} MT65XX_POWER;
#define PMIC_APP_MAIN_CAMERA_POWER_A         MT6328_POWER_LDO_VCAMA

#define PMIC_APP_SUB_CAMERA_POWER_A         MT6328_POWER_LDO_VCAMA

#define PMIC_APP_MAIN_CAMERA_POWER_AF         MT6328_POWER_LDO_VCAM_AF

#define PMIC_APP_SUB_CAMERA_POWER_AF         MT6328_POWER_LDO_VCAM_AF

//#define PMIC_APP_CAP_TOUCH_VDD         MT6328_POWER_LDO_VGP1

#define PMIC_APP_MAIN_CAMERA_POWER_D         MT6328_POWER_LDO_VCAMD

#define PMIC_APP_SUB_CAMERA_POWER_D         MT6328_POWER_LDO_VCAMD

#define PMIC_APP_MAIN_CAMERA_POWER_IO         MT6328_POWER_LDO_VCAM_IO

#define PMIC_APP_SUB_CAMERA_POWER_IO         MT6328_POWER_LDO_VCAM_IO
//
//Analog
#define CAMERA_POWER_VCAM_A         PMIC_APP_MAIN_CAMERA_POWER_A
//Digital
#define CAMERA_POWER_VCAM_D         PMIC_APP_MAIN_CAMERA_POWER_D
//AF
#define CAMERA_POWER_VCAM_AF        PMIC_APP_MAIN_CAMERA_POWER_AF
//digital io
#define CAMERA_POWER_VCAM_IO        PMIC_APP_MAIN_CAMERA_POWER_IO
//Digital for Sub
#define SUB_CAMERA_POWER_VCAM_D     PMIC_APP_SUB_CAMERA_POWER_D
#endif

typedef enum KD_REGULATOR_TYPE_TAG {
	VCAMA,
	VCAMD,
	VCAMIO,
	VCAMAF,
} KD_REGULATOR_TYPE_T;

typedef enum {
	CAMPDN,
	CAMRST,
	CAM1PDN,
	CAM1RST,
	CAMLDO,
	CAMLDO1
} CAMPowerType;

extern void ISP_MCLK1_EN(bool En);
extern void ISP_MCLK2_EN(bool En);
extern void ISP_MCLK3_EN(bool En);

extern bool _hwPowerDown(KD_REGULATOR_TYPE_T type);
extern bool _hwPowerOn(KD_REGULATOR_TYPE_T type, int powerVolt);

int mtkcam_gpio_set(int PinIdx, int PwrType, int Val);
int mtkcam_gpio_init(struct platform_device *pdev);

#endif
